Создайте таблицу-фактов о продажах произвольных товаров. 
---------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS sales (
    sale_id INTEGER NOT NULL,
    sale_date TIMESTAMP,
    item_id INTEGER NOT NULL,
    sale_cnt INTEGER
)
DISTRIBUTED BY (sale_id)
PARTITION BY range(sale_date)
(START (date '2023-06-01') INCLUSIVE
END (date '2023-12-31') INCLUSIVE
EVERY (INTERVAL '1 month'))
;


Создайте таблицу-измерение, в которой отражены стоимость и название товара, а также связь с таблицей-фактов из предыдущего шага.
---------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS products (
    item_id INTEGER PRIMARY KEY,
    item_name VARCHAR(20),
    item_brand VARCHAR(20),
    item_price DECIMAL(10, 2),
    item_category VARCHAR(20)
)
DISTRIBUTED BY (item_id)
;

Заполните таблицы минимальными данными.
----------------------------------------------------------------------
INSERT INTO products (item_id, item_name, item_brand, item_price, item_category) VALUES
 (1, 'джинсы', 'Gloria Jeans', 2500, 'Одежда'),
 (2, 'джинсы', 'Armani Prive', 14500, 'Одежда'),
 (3, 'джинсы', 'Levis', 7500, 'Одежда'),
 (4, 'джинсы', 'Moschino', 24500, 'Одежда'),
 (5, 'джинсы', 'Mango', 4500, 'Одежда'),
 (6, 'джинсы', 'Mango', 4700, 'Одежда'),
 (7, 'куртка', 'Gloria Jeans', 3500, 'Одежда'),
 (8, 'бомбер', 'Mango', 5500, 'Одежда'),
 (9, 'толстовка', 'Levis', 7500, 'Одежда'),
 (10, 'платье', 'Moschino', 34500, 'Одежда'),
 (11, 'юбка', 'Guess', 6500, 'Одежда'),
 (12, 'брюки', 'Benetton', 5500, 'Одежда'),
 (13, 'футболка', 'Armani Prive', 4500, 'Одежда'),
 (14, 'топ', 'Zara', 2500, 'Одежда'),
 (15, 'комбинезон', 'Gloria Jeans', 4500, 'Одежда'),
 (16, 'губная помада', 'L Oreal', 550, 'Косметика'),
 (17, 'тушь', 'L Oreal', 850, 'Косметика'),
 (18, 'пудра', 'L Oreal', 650, 'Косметика'),
 (19, 'румяна', 'L Oreal', 550, 'Косметика'),
 (20, 'хайлайтер', 'L Oreal', 750, 'Косметика');

INSERT INTO sales (sale_id,sale_date,item_id,sale_cnt) VALUES
 (1, '2023-06-01', 1, 1),
 (2, '2023-06-02', 20, 4),
 (3, '2023-06-03', 2, 2),
 (4, '2023-06-04', 19, 3),
 (5, '2023-06-05', 3, 5),
 (6, '2023-06-06', 18, 7),
 (7, '2023-06-07', 4, 1),
 (8, '2023-06-08', 17, 14),
 (9, '2023-06-09', 5, 6),
 (10, '2023-06-10', 16, 8),
 (11, '2023-06-11', 6, 3),
 (12, '2023-06-12', 15, 24),
 (13, '2023-06-13', 7, 3),
 (14, '2023-06-14', 14, 9),
 (15, '2023-06-15', 8, 5),
 (16, '2023-06-16', 13, 7),
 (17, '2023-06-17', 9, 2),
 (18, '2023-06-18', 12, 8),
 (19, '2023-06-19', 10, 2),
 (20, '2023-06-20', 11, 6),
 (21, '2023-06-21', 11, 4),
 (22, '2023-06-22', 10, 5),
 (23, '2023-06-23', 12, 4),
 (24, '2023-06-24', 9, 3),
 (25, '2023-06-25', 13, 2),
 (26, '2023-06-26', 8, 4),
 (27, '2023-06-27', 14, 9),
 (28, '2023-06-28', 7, 8),
 (29, '2023-06-29', 15, 7),
 (30, '2023-06-30', 6, 6),
 (31, '2023-07-01', 16, 5),
 (32, '2023-07-02', 5, 4),
 (33, '2023-07-03', 17, 3),
 (34, '2023-07-04', 4, 2),
 (35, '2023-07-05', 18, 4),
 (36, '2023-07-06', 3, 1),
 (37, '2023-07-07', 19, 14),
 (38, '2023-07-08', 2, 2),
 (39, '2023-07-09', 20, 12),
 (40, '2023-07-10', 1, 7),
 (41, '2023-07-11', 2, 4),
 (42, '2023-07-12', 3, 2),
 (43, '2023-07-13', 11, 8),
 (44, '2023-07-14', 15, 3),
 (45, '2023-07-15', 1, 1),
 (46, '2023-07-16', 5, 7),
 (47, '2023-07-17', 1, 5),
 (48, '2023-07-18', 7, 3),
 (49, '2023-07-19', 11, 2),
 (50, '2023-07-20', 18, 10);
Включили оптимизатор запросов
----------------------------------------------------------------------
SET optimizer='on';


Напишите запрос, который рассчитывает сумму продаж определенного товара за определенную единицу времени (посчитаем сумму продаж джинсов за первую неделю июня). 
-----------------------------------------------------------------------
SELECT 
   item_name,
   sum(item_price * sales_cnt) AS sales_sum
FROM 
   sales 
INNER JOIN products ON sales.item_id = products.item_id
WHERE 
   item_name = 'джинсы' AND sale_date BETWEEN '2023-06-01' AND '2023-06-07'
GROUP BY item_name;


Напечатайте план предыдущего запроса. 
------------------------------------------------------------------------
EXPLAIN 
SELECT 
   item_name,
   sum(item_price * sales_cnt) AS sales_sum
FROM 
   sales 
INNER JOIN products ON sales.item_id = products.item_id
WHERE 
   item_name = 'джинсы' AND sale_date BETWEEN '2023-06-01' AND '2023-06-07'
GROUP BY item_name;

